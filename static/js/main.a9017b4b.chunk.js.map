{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","name","email","CardList","map","monster","id","SearchBox","palceholder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAK,oEACxB,6BAAMH,EAAMI,SAASC,OACrB,4BAAIL,EAAMI,SAASE,YCHdC,G,MAAW,SAAAP,GAAK,OACtB,qBAAKC,UAAU,YAAf,SACED,EAAMI,SAASI,KAAI,SAAAC,GAAO,OACvB,cAAC,EAAD,CAAuBL,SAAUK,GAAtBA,EAAQC,WCHlBC,G,MAAY,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLC,YAAY,iBACZC,SAAWH,MC+BJI,G,wDAlCb,aAAe,IAAD,8BACZ,gBAYFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEf,SAAUwB,S,oBAK7C,WACE,MAAkCC,KAAKN,MAA/BnB,EAAR,EAAQA,SAAUgB,EAAlB,EAAkBA,YACZU,EAAmB1B,EAAS2B,QAAO,SAAA3B,GAAQ,OAC/CA,EAASC,KAAK2B,cAAcC,SAASb,EAAYY,kBAEnD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,YAAY,kBACZF,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUT,SAAU0B,W,GA7BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9017b4b.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\nexport const Card = (props) => (\n\n    <div className='card-container'>\n        <img alt=\"monster\" src={'https://robohash.org/${props.monseter.id}?set=set2&size=180x180'} />\n        <h2 >{props.monsters.name}</h2>\n        <p>{props.monsters.email}</p>\n    </div>\n)","import React from 'react';\nimport {Card} from '../card/card.component';\nimport './card-list.styles.css'\n\nexport const CardList = props => (\n       <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monsters={monster}/>\n        ))}\n        </div>\n);","import React from 'react';\nimport './search-box.styles.css'\n//fuctional compennt to get props and  rendexr some html\n\nexport const SearchBox = ({ palceholder, handleChange}) => (\n    <input\n        className='search'\n        type='search'\n        placeholder='search monsers'\n        onChange={ handleChange}\n    />\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;//pull from the state\n    const filteredMonsters = monsters.filter(monsters =>\n      monsters.name.toLowerCase().includes(searchField.toLowerCase())//return true/false\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}